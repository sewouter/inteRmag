% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/manual.table.check.R
\name{manual.table.check}
\alias{manual.table.check}
\title{Check a table for rare occurrences of values in its columns.}
\usage{
manual.table.check(
  x,
  n_elements = 0.01,
  frequency = 0.01,
  plot = TRUE,
  indicator_columns = TRUE
)
}
\arguments{
\item{x}{the data frame (made entirely of character class columns) to check.}

\item{n_elements}{the threshold of the amount of unique elements below which
further investigation is required to check for rare occurrences. This can
also be a ratio of the total number of rows in the table (by default 0.01,
i.e. 1 percent).}

\item{frequency}{the frequency of occurrence of unique elements below which
individual lines in the table are to be shown. This can also be a ratio of
the total number of rows in the table (by default 0.01, i.e. 1 percent).}

\item{plot}{whether to show a barplot of each occurrence of a value in each
column. This plot helps to visualise anomalies.}

\item{indicator_columns}{a character vector of the headers of the columns
to be shown in the suspect lines. The default (TRUE) shows all the columns.}
}
\description{
If you expect a few mistakes in a table, this function will find
the amount of unique elements in each column, and if the amount is beyond the
'n_elements' threshold, it will show the frequency of occurrence of the
elements. This helps identify rare values, which could be mistakes. Then, if
the frequencies are below a certain threshold (the 'frequency' parameter),
it will track down and show the individual suspect (potentially problematic)
lines. A bar plot is also integrated to better visualise how values (in
alphabetic order) are distributed.
}
\examples{
set.seed(42)

# Evenly distributed values ----

binary <- sample(0:1, 1000, replace = T)

letters <- sample(c("a", "b", "c"), 1000, replace = T)

random  <- round(runif(1000), 2)

# Anomalies ----

binary[90:100] <- 2

letters[6]      <- "GG"
letters[60:400] <- "EZ"

random[400:450] <- 0.5

# ----

x <- data.frame(binary = binary, letters = letters, random = random)

opar <- par("mfrow")

par(mfrow = c(1,3))

manua.table.check(x) # The plot shows anomalies that are more
# complex than detected only by the function

par(mfrow = opar)

manual.table.check(x, frequency = 100, plot = F)

}
